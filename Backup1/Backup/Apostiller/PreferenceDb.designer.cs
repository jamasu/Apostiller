#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Apostiller_Project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Apostiller")]
	public partial class PreferenceDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpreference(preference instance);
    partial void Updatepreference(preference instance);
    partial void Deletepreference(preference instance);
    #endregion
		
		public PreferenceDbDataContext() : 
				base(global::Apostiller_Project.Properties.Settings.Default.ApostillerConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PreferenceDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PreferenceDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PreferenceDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PreferenceDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<preference> preferences
		{
			get
			{
				return this.GetTable<preference>();
			}
		}
	}
	
	[Table(Name="dbo.preference")]
	public partial class preference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pref_capacity;
		
		private string _pref_doc;
		
		private string _pref_office;
		
		private string _pref_county;
		
		private string _pref_city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpref_capacityChanging(string value);
    partial void Onpref_capacityChanged();
    partial void Onpref_docChanging(string value);
    partial void Onpref_docChanged();
    partial void Onpref_officeChanging(string value);
    partial void Onpref_officeChanged();
    partial void Onpref_countyChanging(string value);
    partial void Onpref_countyChanged();
    partial void Onpref_cityChanging(string value);
    partial void Onpref_cityChanged();
    #endregion
		
		public preference()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_pref_capacity", DbType="NVarChar(65)")]
		public string pref_capacity
		{
			get
			{
				return this._pref_capacity;
			}
			set
			{
				if ((this._pref_capacity != value))
				{
					this.Onpref_capacityChanging(value);
					this.SendPropertyChanging();
					this._pref_capacity = value;
					this.SendPropertyChanged("pref_capacity");
					this.Onpref_capacityChanged();
				}
			}
		}
		
		[Column(Storage="_pref_doc", DbType="NVarChar(65)")]
		public string pref_doc
		{
			get
			{
				return this._pref_doc;
			}
			set
			{
				if ((this._pref_doc != value))
				{
					this.Onpref_docChanging(value);
					this.SendPropertyChanging();
					this._pref_doc = value;
					this.SendPropertyChanged("pref_doc");
					this.Onpref_docChanged();
				}
			}
		}
		
		[Column(Storage="_pref_office", DbType="NVarChar(65)")]
		public string pref_office
		{
			get
			{
				return this._pref_office;
			}
			set
			{
				if ((this._pref_office != value))
				{
					this.Onpref_officeChanging(value);
					this.SendPropertyChanging();
					this._pref_office = value;
					this.SendPropertyChanged("pref_office");
					this.Onpref_officeChanged();
				}
			}
		}
		
		[Column(Storage="_pref_county", DbType="NVarChar(150)")]
		public string pref_county
		{
			get
			{
				return this._pref_county;
			}
			set
			{
				if ((this._pref_county != value))
				{
					this.Onpref_countyChanging(value);
					this.SendPropertyChanging();
					this._pref_county = value;
					this.SendPropertyChanged("pref_county");
					this.Onpref_countyChanged();
				}
			}
		}
		
		[Column(Storage="_pref_city", DbType="NVarChar(100)")]
		public string pref_city
		{
			get
			{
				return this._pref_city;
			}
			set
			{
				if ((this._pref_city != value))
				{
					this.Onpref_cityChanging(value);
					this.SendPropertyChanging();
					this._pref_city = value;
					this.SendPropertyChanged("pref_city");
					this.Onpref_cityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
